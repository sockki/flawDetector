import ArticleCardList from '@/app/vulnerability-db/_components/ArticleCardList';
import TopicList from '@/app/vulnerability-db/_components/TopicList';
import { authOptions } from '@/authOptions';
import VulDbSearchInput from '@/components/Input/VulDbSearchInput';
import Pagination from '@/components/Pagination/Pagination';
import { ApiResponse, ArticleData } from '@/types/crawlingData';
import { getServerSession } from 'next-auth';
import BannerCardList from './_components/BannerCardList';
import ResultError from './_components/ResultError';

export default async function VulnerabilityDbPage({
  searchParams,
}: {
  searchParams: { label: string; page: string; search: string };
}) {
  const bannerResponse: ApiResponse<ArticleData[]> = await (
    await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/vulDb/banner`, {
      next: { revalidate: 60 * 60 * 24 },
    })
  ).json();

  const labelUpdateResponse: ApiResponse<null> = await (
    await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/vulDb/updateLabel`, {
      // next: { revalidate: 300 },
      cache: 'no-cache',
    })
  ).json();

  if (!labelUpdateResponse.success) {
    console.log(labelUpdateResponse.message);
    // 실패시 예외 처리 필요
  }

  const nowPage = searchParams.page ? Number(searchParams.page) : 1;
  const session = await getServerSession(authOptions);
  const userId = session?.user?.id;
  const vulDbResponse: ApiResponse<ArticleData[]> = await (
    await fetch(
      `${process.env.NEXT_PUBLIC_API_URL}/api/vulDb?label=${searchParams.label}&page=${searchParams.page}${searchParams.search ? `&search=${searchParams.search}` : ''}&userId=${userId}`,
      {
        cache: 'no-store',
      },
    )
  ).json();

  let totalPage = 1;
  if (vulDbResponse.totalLength) {
    totalPage =
      vulDbResponse.totalLength % 5 > 0
        ? vulDbResponse.totalLength / 5 + 1
        : vulDbResponse.totalLength / 5;
  }

  return (
    <div className="mb-[19.6rem] mt-[2.701rem] flex flex-col items-center gap-[7.6rem]">
      <BannerCardList {...bannerResponse} />
      <VulDbSearchInput />
      <div className="mb-[7.6rem] flex gap-[10.2rem]">
        {vulDbResponse.success ? (
          <ArticleCardList {...vulDbResponse} />
        ) : (
          <ResultError
            message={String(vulDbResponse.message)}
            subMessage={String(vulDbResponse.subMessage)}
          />
        )}
        <TopicList />
      </div>
      <Pagination totalPage={Math.floor(totalPage)} nowPage={nowPage} />
    </div>
  );
}
